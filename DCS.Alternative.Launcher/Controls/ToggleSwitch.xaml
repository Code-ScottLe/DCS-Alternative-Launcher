<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DCS.Alternative.Launcher.Controls">


    <Style x:Key="ToggleSwitchButtonStyle" TargetType="{x:Type local:ToggleSwitchButton}">
        <Setter Property="BorderBrush" Value="#FFFFFFFF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="30" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OffSwitchBrush" Value="#AFFF3434" />
        <Setter Property="OnSwitchBrush" Value="#AF11AF11" />
        <Setter Property="ThumbIndicatorWidth" Value="30" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="ThumbIndicatorBrush" Value="#FFFFFFFF" />
        <Setter Property="ThumbIndicatorDisabledBrush" Value="Transparent" />
        <Setter Property="Width" Value="50" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleSwitchButton}">
                    <Grid>
                        <Grid x:Name="PART_SwitchTrack" Margin="0,5,0,0">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid Margin="{TemplateBinding Padding}" ClipToBounds="True">
                                    <Border Background="{TemplateBinding OnSwitchBrush}" CornerRadius="{TemplateBinding CornerRadius}" />
                                    <Border x:Name="PART_OffSwitchBorder"
                                            Background="{TemplateBinding OffSwitchBrush}"
                                            CornerRadius="{TemplateBinding CornerRadius}"
                                            RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="PART_BackgroundTranslate" />
                                        </Border.RenderTransform>
                                    </Border>
                                    <Border x:Name="PART_BackgroundOverlay"
                                            Background="#FFFFFFFF"
                                            CornerRadius="{TemplateBinding CornerRadius}"
                                            Opacity="0" />
                                </Grid>
                            </Border>
                            <Ellipse x:Name="PART_ThumbIndicator"
                                     Width="{TemplateBinding ThumbIndicatorWidth}"
                                     Height="{TemplateBinding ThumbIndicatorWidth}"
                                     Margin="4,0,0,0"
                                     HorizontalAlignment="Left"
                                     Fill="{TemplateBinding ThumbIndicatorBrush}"
                                     Stretch="Uniform">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform x:Name="PART_ThumbTranslate" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <Thumb x:Name="PART_DraggingThumb" Background="Transparent">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Grid Background="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ThumbIndicator" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThumbIndicatorDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ToggleSwitch}">
        <Setter Property="ContentDirection" Value="RightToLeft" />
        <Setter Property="ContentPadding" Value="0 0 4 0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="#FFFFFFFF" />
        <Setter Property="ThumbIndicatorBrush" Value="#FFFFFFFF" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="OffSwitchBrush" Value="#AFFF3434" />
        <Setter Property="OnSwitchBrush" Value="#AF11AF11" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="ThumbIndicatorDisabledBrush" Value="Transparent" />
        <Setter Property="ThumbIndicatorWidth" Value="12" />
        <Setter Property="ToggleSwitchButtonStyle" Value="{StaticResource ToggleSwitchButtonStyle}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleSwitch}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="firstCol" Width="*" />
                                <ColumnDefinition x:Name="secCol" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl x:Name="Header"
                                            Grid.ColumnSpan="2"
                                            Content="{TemplateBinding Header}"
                                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                            FontFamily="{TemplateBinding HeaderFontFamily}"
                                            FontSize="12"
                                            FontWeight="Regular"
                                            IsTabStop="False" />
                            <ContentControl x:Name="Content"
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Margin="{TemplateBinding ContentPadding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            IsTabStop="False" />
                            <local:ToggleSwitchButton x:Name="Switch"
                                                      Grid.Row="1"
                                                      Grid.Column="1"
                                                      VerticalAlignment="Center"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      CornerRadius="{TemplateBinding CornerRadius}"
                                                      FocusVisualStyle="{x:Null}"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      OffSwitchBrush="{TemplateBinding OffSwitchBrush}"
                                                      OnSwitchBrush="{TemplateBinding OnSwitchBrush}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      Style="{TemplateBinding ToggleSwitchButtonStyle}"
                                                      ThumbIndicatorBrush="{TemplateBinding ThumbIndicatorBrush}"
                                                      ThumbIndicatorDisabledBrush="{TemplateBinding ThumbIndicatorDisabledBrush}"
                                                      ThumbIndicatorWidth="{TemplateBinding ThumbIndicatorWidth}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Header"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.3"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Content"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.3"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Switch"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.75"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="Content" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Content">
                                <Setter.Value>
                                    <Binding Mode="TwoWay"
                                             Path="OnLabel"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="Content" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Content">
                                <Setter.Value>
                                    <Binding Mode="TwoWay"
                                             Path="OffLabel"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Header}" Value="{x:Null}">
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger Property="ContentDirection" Value="RightToLeft">
                            <Setter Property="ContentPadding" Value="4 0 0 0" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Switch" Property="Grid.Column" Value="0" />
                            <Setter TargetName="firstCol" Property="Width" Value="Auto" />
                            <Setter TargetName="secCol" Property="Width" Value="*" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>